1)Простая фабрика - класс, предоставляющий интерфейс для создания объектов конкретного класса на основе каких-то данных.
    Все непосредственные операции "new" по созданию объектов инкапсулируются в этот класс.
    Это просто, в примере не нуждается

2)Фабричный метод - вынесение операций "new" по непосредственному созданию объектов какого-то одного класса в абстрактный
    метод текущего класса, который будет реализовываться подклассами текущего класса
    Это просто, в примере не нуждается

3)Паттерн абстрактная фабрика - интерфейс для создания СЕМЕЙСТВА ВЗАИМОСВЯЗАННЫХ ОБЪЕКТОВ - каждый публичный метод этого
    интерфейса - по сути инкапсулирует операции "new"  по созданию объектов отдельного класса. Только конкретная реализация
    абстрактной фабрики по факту создает объекты взаимосвязанных классов.

    Пример: Есть сущность - пицца, она состоит из взаимосвязанных компонентов - тесто, соус, наполнители.
            Тогда паттерн абстрактная фабрика предполагает существование интерфейса:
            {
                создатьТесто()
                создатьСоус()
                создатьНаполнители()
            }

            допустим бывает ТонкоеТесто и ТолстоеТесто
            допустим бывает КислоСладкийСоус и БарбекюСоус
            допустим бывает ГрибыНаполнитель  и БеконНаполнитель

            Тогда конкретная реализация абстрактной фабрики создает по факту компоненты пиццы

            например ФабрикаПиццыИмениЖениДронова
                при вызове создатьТесто вернет ТолстоеТесто
                при вызове создатьСоус  вернет КислоСладкийСоус
                при вызове создатьНаполнители вернет БеконНаполнитель