Паттерн Одиночка должен:
    а) гарантировать, что в приложении может быть создан только 1 объект класса-одиночки
    б) предоставить глобальную точку доступа к объекту-одиночке

Для решения данных задач достаточно:
    1)Объявить конструктор класса-одиночки приватным
    2)Ввести в класс-одиночку статическое поле, в котором будет храниться единственный экземпляр класса
    3)Реализовать методстатический метод запроса объекта-одиноки

    В многопоточных приложениях тривиальная реализация пункта 3 через lazyInit может привести к проблемам, тогда можно:
        а) Создавать объект-синглтон заранее, еще до его использования (если его создание не оень ресурсоемко)
        б) синхронизировать метод запроса объекта-одиночки (самое простое, но может серьезно упасть производительность)
        в) внутри метода запроса объекта-одиночки сделать условную синхронизацию (более сложный подход, но универсальный)